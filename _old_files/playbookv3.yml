---

- hosts: localhost
  gather_facts: no

  vars:
    jsondata: "{{ lookup('file','sample_topo.json')|from_json }}"
    project_folder: "/Users/josesanchez/Qsync/OSI/NetworkCI/json_dict/project_folder"
    project_name: "test_proj_name"

  tasks:
#      - name: device loop
#        set_fact:
#           Hostname: "{{item.Name}}"
#           DeviceID: "{{item.FakeID}}"
#           OS: "{{item.NodeType}}"
#           namespace: "{{item.TopologyID}}"
#        loop: "{{ (jsondata['Routers']) }}"
#        register: deviceinfo.results

##      - name: copy content
##        copy:
##          content: |
##                  {% for item.key in groups.Routers %}
##                  [{{host.NodeType}}]
##                  {{host.hostname}}
##                  {% endfor %}
##
##          dest: dest=./Users/josesanchez/Qsync/OSI/NetworkCI/json_dict/file.ini
##        with_dict : "{{ lookup('dict','jsondata')|from_json }}"
##        loop: "{{ hostvars | dict2items }}"
#      - name: jinja lookup
#        template: src=./Users/josesanchez/Qsync/OSI/NetworkCI/json_dict.j2 dest=./Users/josesanchez/Qsync/OSI/NetworkCI/json_dict/file.ini
#        with_items: "{{ (jsondata['Routers']) }}"
#      - name: bug problem
#        debug: var=
#        with_items: "{{jsondata['Routers']}}"
      - name: Iterate Json -  Device
        set_fact:
          name_item: "{{item.Name}}"
          os_item:  "{{item.NodeType}}"
          id_item: "{{item.FakeID}}"
        loop: "{{jsondata.Routers}}"
        register: device_results

      - name: Create Fact List - Device
        set_fact:
          name: "{{ device_results.results | map(attribute='ansible_facts.name_item') | list }}"
          os: "{{ device_results.results | map(attribute='ansible_facts.os_item') | list }}"
          Did: "{{ device_results.results | map(attribute='ansible_facts.id_item') | list }}"

      - name: Print Facts - Device
        debug: var=name

      - name: Iterate Json -  Links
        set_fact:
          src_item: "{{item.Source}}"
          dest_item:  "{{item.Target}}"
          id_item: "{{item.FakeID}}"
        loop: "{{jsondata.Links}}"
        register: link_results

      - name: Create Fact List - Links
        set_fact:
          src: "{{ link_results.results | map(attribute='ansible_facts.src_item') | list }}"
          dest: "{{ link_results.results | map(attribute='ansible_facts.dest_item') | list }}"
          Lid: "{{ link_results.results | map(attribute='ansible_facts.id_item') | list }}"

      - name: Print Facts - Device
        debug: var=src

#####      - name: make List
#####        lineinfile:
#####          path: /"{{project_folder}}/temp.txt
#####          line: "{{ item }}"
#####        loop: "{{jsondata.Routers}}"
#####
#####
#####      - name:  Print device facts
#####        debug:
#####          msg: "{{item.Name}}, {{item.FakeID}},{{item.NodeType}}"
#####        with_items: "{{jsondata['Routers']}}"
#####        register: deviceinfo.{{item.Name}}

#      - name: Generate hosts.ini
#        template: src=./Users/josesanchez/Qsync/OSI/NetworkCI/json_dict/hosts.j2 dest=./Users/josesanchez/Qsync/OSI/NetworkCI/json_dict/"{{Hostname}}".ini
#      - name: debug var stuff
#        debug: var= deviceinfo.{{item.Name}}
###        with_items: jsondata

##      - name:  Print link facts
##        debug:
##          msg: "{{item.Source}}, {{item.Target}}"
##        with_items: "{{jsondata['Links']}}"
##        register: linkinfo.{{item.Source}}
##
##      - name:  Print link facts
##        debug:
##          msg: linkinfo.{{item.Name[0]}}

#///some, some kinda jinja templating and export to file for hostvar/inventory

#///link loop when DeviceID == DeviceID

#      - name: link loop
#        set_fact:
#           src_int: "{{item.Source}}"
#           dest_int: "{{item.Target}}"
#           namespace: "{{item.TopologyID}}"
#        with_items: "{{ jsondata['Links'] }}"
#
#///some, some kinda jinja templating and export to file for hostvars, maybe add line to file
#
#
#      - name:  Print Fact
#        debug:
#          msg: info
#        with_items: "{{ jsondata['Routers'] }}"
#        register: output




#///////////////////////////////////////////////////////////////////

#tasks:
#  - name: Print phone records
#    debug: msg="User {{ item.key }} is {{ item.value.name }}
#                     ({{ item.value.telephone }})"
#    with_dict: users



#      - name: Create Fact List
#        set_fact:
#            dict_out: "{{ info.results | list }}"
#    #         dict_out: "{{ info.results | map(attribute='ansible_facts.app_item') | list }}"
#
#      - name:  Print Fact
#        debug: var=dict_out

#      - name: Saving backup config
#        copy: content="{{ dict_out }}" dest= "{{Hostname}}"

#      - name: Print results
#        debug:
#          msg: "{{info}}"

#  - name: Print dict output
#    debug:
#      msg: "User {{ item.key }} is {{ item.value.name }} ({{ item.value.telephone }})"
#    loop: "{{ lookup('dict', users) }}"
#
